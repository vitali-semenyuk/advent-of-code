pub fn solve(input: &str) -> (i64, i64) {
    (solve_first_part(input), solve_second_part(input))
}

fn solve_first_part(input: &str) -> i64 {
    0
}

fn solve_second_part(input: &str) -> i64 {
    42
}

#[cfg(test)]
mod tests {
    use std::fs;

    use super::*;

    const INPUT: &str = "
";

    #[test]
    fn test_first_part() {
        let answer = 42;

        assert_eq!(answer, solve_first_part(INPUT))
    }

    #[test]
    fn test_second_part() {
        let answer = 42;

        assert_eq!(answer, solve_second_part(INPUT))
    }

    #[test]
    fn first_part_solution() {
        let input = fs::read_to_string("./tasks/dayX.txt").unwrap();
        let answer = 42;

        assert_eq!(answer, solve_first_part(&input));
    }

    #[test]
    fn second_part_solution() {
        let input = fs::read_to_string("./tasks/dayX.txt").unwrap();
        let answer = 42;

        assert_eq!(answer, solve_second_part(&input));
    }
}
